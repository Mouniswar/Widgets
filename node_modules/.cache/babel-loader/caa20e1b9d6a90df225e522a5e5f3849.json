{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mouni\\\\Desktop\\\\react\\\\widgets\\\\src\\\\components\\\\Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const renderOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => onSelectedChange(option),\n      className: \"item\",\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a Color: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: \"ui selection dropdown visible active\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu visible transition\",\n          children: renderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"6dOGeNFz7lEsAiwKPNBpp5+ZTyc=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/mouni/Desktop/react/widgets/src/components/Dropdown.js"],"names":["React","useState","Dropdown","options","selected","onSelectedChange","open","setOpen","renderOptions","map","option","value","label"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAA2C;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,KAAD,CAA/B;AAEA,QAAMO,aAAa,GAAGL,OAAO,CAACM,GAAR,CAAaC,MAAD,IAAY;AAC1C,QAAGA,MAAM,CAACC,KAAP,KAAiBP,QAAQ,CAACO,KAA7B,EAAoC;AAChC,aAAO,IAAP;AACH;;AAED,wBACI;AAEA,MAAA,OAAO,EAAE,MAAMN,gBAAgB,CAACK,MAAD,CAF/B;AAGA,MAAA,SAAS,EAAC,MAHV;AAAA,gBAKKA,MAAM,CAACE;AALZ,OACKF,MAAM,CAACC,KADZ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAdqB,CAAtB;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,CAACD,IAAF,CADtB;AAEC,QAAA,SAAS,EAAC,sCAFX;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACQ;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,oBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnCD;;GAAMN,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Dropdown = ({options, selected, onSelectedChange}) => {\r\n    const [open,setOpen] = useState(false);\r\n\r\n    const renderOptions = options.map((option) => {\r\n        if(option.value === selected.value) {\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div \r\n            key={option.value} \r\n            onClick={() => onSelectedChange(option)}\r\n            className=\"item\"\r\n            >\r\n                {option.label}\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label className=\"label\">Select a Color: </label>\r\n                <div\r\n                onClick={() => setOpen(!open)}\r\n                 className=\"ui selection dropdown visible active\">\r\n                    <i className=\"dropdown icon\"></i>\r\n                    <div className=\"text\">{selected.label}</div>\r\n                    <div className=\"menu visible transition\">\r\n                        {renderOptions}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}