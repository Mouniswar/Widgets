{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mouni\\\\Desktop\\\\react\\\\widgets\\\\src\\\\components\\\\Convert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Convert = ({\n  language,\n  text\n}) => {\n  _s();\n\n  const [translated, setTranslated] = useState('');\n  const [debouncedText, setDebouncedText] = useState(text);\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedText(text);\n    }, 500);\n  }, [text]);\n  useEffect(() => {\n    const doTranslation = async () => {\n      const {\n        data\n      } = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\n        params: {\n          q: text,\n          target: language.value,\n          key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\n        }\n      }); //here first data refers to axios and second data refers to the data thats coming from actual request\n\n      setTranslated(data.data.translations[0].translatedText);\n    };\n\n    doTranslation();\n  }, [language, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ui header\",\n      children: translated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Convert, \"XsczO6TrJ9R1/x/nYadIDu9OMyI=\");\n\n_c = Convert;\nexport default Convert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Convert\");","map":{"version":3,"sources":["C:/Users/mouni/Desktop/react/widgets/src/components/Convert.js"],"names":["React","useState","useEffect","axios","Convert","language","text","translated","setTranslated","debouncedText","setDebouncedText","timerId","setTimeout","doTranslation","data","post","params","q","target","value","key","translations","translatedText"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqB;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACK,IAAD,CAAlD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,gBAAgB,CAACJ,IAAD,CAAhB;AACH,KAFyB,EAEvB,GAFuB,CAA1B;AAGH,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,aAAa,GAAG,YAAW;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMX,KAAK,CAACY,IAAN,CAAW,0DAAX,EAAuE,EAAvE,EAA2E;AAC9FC,QAAAA,MAAM,EAAE;AACJC,UAAAA,CAAC,EAAEX,IADC;AAEJY,UAAAA,MAAM,EAAEb,QAAQ,CAACc,KAFb;AAGJC,UAAAA,GAAG,EAAE;AAHD;AADsF,OAA3E,CAAvB,CAD6B,CAS7B;;AACAZ,MAAAA,aAAa,CAACM,IAAI,CAACA,IAAL,CAAUO,YAAV,CAAuB,CAAvB,EAA0BC,cAA3B,CAAb;AACH,KAXD;;AAaAT,IAAAA,aAAa;AAEhB,GAhBQ,EAgBN,CAACR,QAAD,EAAUC,IAAV,CAhBM,CAAT;AAkBA,sBACI;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCD;;GAAMH,O;;KAAAA,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Convert = ({language,text}) => {\r\n    const [translated,setTranslated] = useState('');\r\n    const [debouncedText, setDebouncedText] = useState(text);\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => {\r\n            setDebouncedText(text);\r\n        }, 500);\r\n    }, [text]);\r\n \r\n    useEffect(() => {\r\n        const doTranslation = async () =>{\r\n            const { data } = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\r\n                params: {\r\n                    q: text,\r\n                    target: language.value,\r\n                    key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\r\n                }\r\n            });\r\n\r\n            //here first data refers to axios and second data refers to the data thats coming from actual request\r\n            setTranslated(data.data.translations[0].translatedText);\r\n        }\r\n\r\n        doTranslation();\r\n\r\n    }, [language,text]);\r\n\r\n    return(\r\n        <div>\r\n            <h1 className=\"ui header\">{translated}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Convert;"]},"metadata":{},"sourceType":"module"}